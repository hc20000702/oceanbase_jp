FINAL TEST

CREATE TABLE FINAL_1(ID INT, COL1 INT NULLABLE, FEAT1 FLOAT);
SUCCESS
CREATE TABLE FINAL_2(ID INT, COL2 INT, FEAT2 FLOAT);
SUCCESS
CREATE TABLE FINAL_3(ID INT, COL3 INT, FEAT3 FLOAT);
SUCCESS

INSERT INTO FINAL_1 VALUES (1, 4, 11.2);
SUCCESS
INSERT INTO FINAL_1 VALUES (2, 2, 12.0);
SUCCESS
INSERT INTO FINAL_1 VALUES (3, 3, 13.5);
SUCCESS

INSERT INTO FINAL_2 VALUES (1, 2, 13.0);
SUCCESS
INSERT INTO FINAL_2 VALUES (2, 7, 10.5);
SUCCESS
INSERT INTO FINAL_2 VALUES (5, 3, 12.6);
SUCCESS

INSERT INTO FINAL_3 VALUES (1, 2, 11.0);
SUCCESS
INSERT INTO FINAL_3 VALUES (3, 6, 16.5);
SUCCESS
INSERT INTO FINAL_3 VALUES (5, 5, 14.6);
SUCCESS

1. TEST FROM ALIAS
SELECT * FROM FINAL_1 T1 WHERE ID IN (SELECT T2.ID FROM FINAL_2 T2 WHERE T2.COL2 >= T1.COL1);
2 | 2 | 12
ID | COL1 | FEAT1
SELECT * FROM FINAL_1 T1, FINAL_2 T2 WHERE T1.ID <> T2.ID;
1 | 4 | 11.2 | 2 | 7 | 10.5
1 | 4 | 11.2 | 5 | 3 | 12.6
2 | 2 | 12 | 1 | 2 | 13
2 | 2 | 12 | 5 | 3 | 12.6
3 | 3 | 13.5 | 1 | 2 | 13
3 | 3 | 13.5 | 2 | 7 | 10.5
3 | 3 | 13.5 | 5 | 3 | 12.6
T1.ID | T1.COL1 | T1.FEAT1 | T2.ID | T2.COL2 | T2.FEAT2

2. TEST FROM SIMPLE SUB QUERY
UPDATE FINAL_1 SET COL1=NULL WHERE ID=2;
SUCCESS
SELECT * FROM FINAL_1 WHERE EXISTS (SELECT FINAL_2.ID FROM FINAL_2 WHERE FINAL_1.ID > FINAL_2.ID);
2 | NULL | 12
3 | 3 | 13.5
ID | COL1 | FEAT1
SELECT * FROM FINAL_1 WHERE NOT EXISTS (SELECT FINAL_2.ID FROM FINAL_2 WHERE FINAL_1.FEAT1 <= FINAL_2.FEAT2);
3 | 3 | 13.5
ID | COL1 | FEAT1

3. TEST FROM COMPLEX SUB QUERY
UPDATE FINAL_1 SET COL1=2 WHERE ID=2;
SUCCESS
SELECT * FROM FINAL_1 WHERE (SELECT MAX(FINAL_2.FEAT2) FROM FINAL_2) > FEAT1 OR (SELECT MIN(FINAL_3.COL3) FROM FINAL_3) < COL1;
1 | 4 | 11.2
2 | 2 | 12
3 | 3 | 13.5
ID | COL1 | FEAT1
SELECT * FROM FINAL_1 WHERE FEAT1 <> (SELECT AVG(FINAL_2.FEAT2) FROM FINAL_2 WHERE FINAL_2.FEAT2 > FINAL_1.FEAT1);
1 | 4 | 11.2
2 | 2 | 12
ID | COL1 | FEAT1

4. TEST FROM ALIAS
SELECT T1.COL1 AS NUM, T1.FEAT1 AGE, T1.ID, T2.* FROM FINAL_1 T1, FINAL_2 T2 WHERE T1.ID = T2.ID;
2 | 12 | 2 | 2 | 7 | 10.5
4 | 11.2 | 1 | 1 | 2 | 13
NUM | AGE | T1.ID | T2.ID | T2.COL2 | T2.FEAT2
